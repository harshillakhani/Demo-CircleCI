version: 2.1

executors:
  salesforce-executor:
    docker:
      - image: circleci/python:3.8 # Use a base image with Python, since sfdx CLI installation might need it
    working_directory: ~/repo

jobs:
  setup:
    executor: salesforce-executor
    steps:
      - checkout # Checks out your repository code
      - run:
          name: Install Salesforce CLI
          command: |
            curl -sL https://developer.salesforce.com/media/salesforce-cli/sfdx-linux-x64.tar.xz | tar xJ
            sudo ./sfdx/install
            export PATH=$PATH:~/sfdx/bin  # Add Salesforce CLI to the PATH
      - run:
          name: Authenticate to Salesforce Org
          command: |
            echo "$SF_USERNAME" | sfdx auth:web:login --setdefaultusername --clientid $SF_CLIENT_ID --clientsecret $SF_CLIENT_SECRET
            # Use environment variables for login credentials
      - run:
          name: Verify Salesforce CLI Installation
          command: sfdx --version

  run-apex-tests:
    executor: salesforce-executor
    steps:
      - checkout # Checks out your repository code
      - run:
          name: Install Salesforce CLI (if not already installed in 'setup' job)
          command: |
            curl -sL https://developer.salesforce.com/media/salesforce-cli/sfdx-linux-x64.tar.xz | tar xJ
            sudo ./sfdx/install
            export PATH=$PATH:~/sfdx/bin
      - run:
          name: Run Apex Tests
          command: |
            sfdx force:apex:test:run --resultformat=human --wait=10 --codecoverage  # Run the Apex tests and wait for up to 10 minutes
      - run:
          name: Save Apex Test Results
          command: |
            sfdx force:apex:test:report --resultformat=human > test_results.txt
            cat test_results.txt
            # Optionally you can upload this as an artifact for CircleCI visibility:
            # store_artifacts:
            #   path: test_results.txt
            #   destination: test_results

workflows:
  version: 2
  test:
    jobs:
      - setup
      - run-apex-tests:
          requires:
            - setup
